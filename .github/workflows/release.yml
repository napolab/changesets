name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  changeset:
    runs-on: ubuntu-latest
    outputs:
      published: ${{ steps.changesets.outputs.published }}
      publishedPackages: ${{ steps.changesets.outputs.publishedPackages }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Git fetch tags
        run: git fetch --tags origin

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: "package.json"

      - name: Install Dependencies
        run: npm i

      - name: Create Release Pull Request
        id: changesets
        uses: changesets/action@v1
        with:
          publish: npx changeset tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  semver:
    needs: changeset
    if: needs.changeset.outputs.published == 'true'
    runs-on: ubuntu-latest
    outputs:
      bump-type: ${{ steps.bump-type.outputs.result }}
    steps:
      - uses: actions/github-script@v6
        id: bump-type
        with:
          result-encoding: string
          script: |
            const [first] = JSON.parse('${{ needs.changeset.outputs.publishedPackages }}')
            if (first === undefined) return ''

            const [major, minor, patch] = first.version.split('.')

            let type = 'patch'
            if (patch === '0') type = 'minor'
            if (minor === '0' && patch === '0') type = 'major'

            return type

  release:
    needs: semver
    if: needs.semver.outputs.bump-type != ''
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Dependencies
        run: npm i

      - name: EAS Build (for major releases) and auto-submit
        if: needs.semver.outputs.bump-type == 'major'
        run: echo "EAS Build production"

      - name: EAS Update (for minor or patch updates)
        if: needs.semver.outputs.bump-type == 'minor' || needs.semver.outputs.bump-type == 'patch'
        run: echo "EAS Update production"

  staging-semver:
    needs: changeset
    if: needs.changeset.outputs.published == 'false'
    runs-on: ubuntu-latest
    outputs:
      bump-type: ${{ steps.check_status.outputs.result }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: "package.json"
      - run: npm i
      - run: npx changeset status --output ./status.json
      - uses: actions/github-script@v6
        id: check_status
        with:
          result-encoding: string
          script: |
            const { readFileSync } = require('fs')
            const content = readFileSync('./status.json', { encoding: 'utf8' })
            const status = JSON.parse(content)
            const bumpType = status.releases?.[0]?.type ?? ''
            return bumpType;

  staging-release:
    needs: staging-semver
    if: needs.staging-semver.outputs.bump-type != ''
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Dependencies
        run: npm i
      - run: npx changeset version
      - name: EAS Build (for major releases) and auto-submit
        if: needs.staging-semver.outputs.bump-type == 'major'
        run: echo "EAS Build staging"
      - name: EAS Update (for minor or patch updates)
        if: needs.staging-semver.outputs.bump-type == 'minor' || needs.staging-semver.outputs.bump-type == 'patch'
        run: echo "EAS Update staging"
